import db from "../../../utils/db";

/**
 * I DELEBERATELY separate the req and res type
 * It is autogenerated by typescript from inferring the codes
 */
interface ReqType {
  query: { id: any };
  method: string;
  body: { [x: string]: any } & FirebaseFirestore.AddPrefixToKeys<string, any>;
}
interface ResType {
  status: (arg0: number) => {
    (): any;
    new (): any;
    end: { (): void; new (): any };
    json: {
      (arg0: FirebaseFirestore.DocumentData | undefined): void;
      new (): any;
    };
  };
}

export default async function AutoIdEntry(req: ReqType, res: ResType) {
  const { id } = req.query;

  try {
    if (req.method === "PUT") {
      await db
        .collection("entries")
        .doc(id)
        .update({
          ...req.body,
          updated: new Date().toISOString(),
        });
    } else if (req.method === "GET") {
      const doc = await db.collection("entries").doc(id).get();
      if (!doc.exists) {
        res.status(404).end();
      } else {
        res.status(200).json(doc.data());
      }
    } else if (req.method === "DELETE") {
      await db.collection("entries").doc(id).delete();
    }
    res.status(200).end();
  } catch (e) {
    res.status(400).end();
  }
}
